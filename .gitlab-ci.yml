#-----------------------------------HEROKU CI/CD CODE-----------------------------------
#image: maven:latest
cache:
  paths:
    - .m2/repository/Trip_Management_System_Group_16/
    - target/

stages:
  - build
  - test
  - deploy
  - deploy-prod

build:
  image: maven:3-jdk-8
  stage: build
  script:
    - mvn clean package -DskipTests=true
    - ls
  artifacts:
    paths:
      - target/*.jar
  only:
    refs:
      - feature_configuration
      - feature_UI
      - feature_backend
      - develop
      - merge_requests
      - heroku_configuration
      - main

# test stage will compile the code and run all the unit tests present in the
# test folder.
test:
  image: maven:3-jdk-8
  stage: test
  script:
    - mvn clean test
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
  only:
    refs:
      - feature_configuration
      - feature_UI
      - feature_backend
      - develop
      - merge_requests
      - heroku_configuration
      - main

deploy-prod:
  image: ruby:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
#    TODO: Add Production App Environment Variables
  only:
    - main

deploy:
  image: ruby:latest
  stage: deploy
  #  tags:
  #    - ugrad
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  only:
    - heroku_configuration