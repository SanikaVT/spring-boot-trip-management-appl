#-----------------------------------HEROKU CI/CD CODE-----------------------------------
#image: maven:
image: ubuntu:latest
cache:
  paths:
    - .m2/repository/Trip_Management_System_Group_16/
    - target/

before_script:
  - apt-get update && DEBIAN_FRONTEND=noninteractive
  - ln -snf /usr/share/zoneinfo/$``CONTAIN``ER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
  - apt-get --yes --force-yes install wget curl maven git

stages:
  - build
  - test
  - code_quality
  - deploy
  - deploy-prod

build:
  image: maven:3-jdk-8
  stage: build
  script:
    - mvn clean package -DskipTests=true
    - ls
  artifacts:
    paths:
      - target/*.jar
  only:
    refs:
      - feature_configuration
      - feature_UI
      - feature_backend
      - develop
      - merge_requests
      - heroku_configuration
      - main

# test stage will compile the code and run all the unit tests present in the
# test folder.
test:
  image: maven:3-jdk-8
  stage: test
  script:
    - mvn clean test
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml
  only:
    refs:
      - feature_configuration
      - feature_UI
      - feature_backend
      - develop
      - merge_requests
      - heroku_configuration
      - main

code_quality:
#  image: maven:latest
  stage: code_quality
#  tags:
#    - ugrad
#  before_script:
#    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#    - eval $(ssh-agent -s)
#    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
  variables:
    UPLOAD_QUALITY_REPORT: 'curl -X PUT -H "Authorization: Token $QSCORED_API_KEY" -H "repository-link: $CI_PROJECT_URL" + -H "username:bn489600@dal.ca" -H "Content-Type: mulitpart/form-data" --url "https://qscored.com/api/upload/file.xml?is_open_access=off&version=$CI_PIPELINE_IID&project_name=CSCI_5308_GROUP_16" -F "file=@Designite_output/DesigniteAnalysis.xml"'
  script:
    - wget -O DesigniteJava.jar https://www.dropbox.com/s/hrfuiesdb9o6cg5/DesigniteJava.jar?dl=1
    - java -jar DesigniteJava.jar -i . -o "Designite_output/" -f XML
    - eval "$UPLOAD_QUALITY_REPORT"
  after_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
    - pwd
    - ls -lrth
    - ls Designite_output/
#    - ls -lrth ~/.ssh
    - echo "$CI_COMMIT_REF_NAME"
    - zip -r ${CI_COMMIT_SHORT_SHA}.zip . -i Designite_output/*.xml
    - ls -lrth ${CI_COMMIT_SHORT_SHA}.zip
    - scp -r -o StrictHostKeyChecking=no ${CI_COMMIT_SHORT_SHA}.zip "${DEPLOY_USER}@${DEPLOY_HOST}:${PROD_DIR}/${CI_COMMIT_SHORT_SHA}_xml_file.zip"
  only:
    refs:
      - feature_configuration
      - feature_UI
      - feature_backend
      - develop
      - merge_requests
      - code_quality_danny
      - heroku_configuration
      - main

deploy-prod:
  image: ruby:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
#TODO: Add Production App Environment Variables
  only:
    - main

deploy:
  image: ruby:latest
  stage: deploy
  #  tags:
  #    - ugrad
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' | ssh-add -
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  only:
    - heroku_configuration